Return-Path: <freedreno-bounces@lists.freedesktop.org>
X-Original-To: lists+freedreno@lfdr.de
Delivered-To: lists+freedreno@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AEB2F2E69A
	for <lists+freedreno@lfdr.de>; Wed, 29 May 2019 22:55:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 66D826E110;
	Wed, 29 May 2019 20:55:26 +0000 (UTC)
X-Original-To: freedreno@lists.freedesktop.org
Delivered-To: freedreno@lists.freedesktop.org
Received: from smtp.codeaurora.org (smtp.codeaurora.org [198.145.29.96])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 798266E110
 for <freedreno@lists.freedesktop.org>; Wed, 29 May 2019 20:55:25 +0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
 id E36F36133A; Wed, 29 May 2019 20:55:23 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
 pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
 DKIM_INVALID,DKIM_SIGNED,SPF_NONE autolearn=no autolearn_force=no
 version=3.4.0
Received: from jcrouse1-lnx.qualcomm.com (i-global254.qualcomm.com
 [199.106.103.254])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 (Authenticated sender: jcrouse@smtp.codeaurora.org)
 by smtp.codeaurora.org (Postfix) with ESMTPSA id 947D961515;
 Wed, 29 May 2019 20:55:19 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 947D961515
From: Jordan Crouse <jcrouse@codeaurora.org>
To: freedreno@lists.freedesktop.org
Date: Wed, 29 May 2019 14:54:42 -0600
Message-Id: <1559163292-4792-7-git-send-email-jcrouse@codeaurora.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1559163292-4792-1-git-send-email-jcrouse@codeaurora.org>
References: <1559163292-4792-1-git-send-email-jcrouse@codeaurora.org>
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1559163324;
 bh=6chReSEkevyOEDtSRSepdc5qrnqGOGKdxjwcEABL24Y=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=FvcMAh/1Firmuvzj0ZCSwVjKCTArjYqcV0qHQj6XFLbMsDJlledodozqOrTqMi4HK
 HOxuZgpZV49FlCoulRdEUKEIuqrSIGy1DWjTnNwgKjNlEDA6CWt+btIxyQ+qbX5xIb
 lccFF7e0eBPpznfqvN+mAresPQiZqrzLpMhm6JWc=
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=codeaurora.org; s=default; t=1559163322;
 bh=6chReSEkevyOEDtSRSepdc5qrnqGOGKdxjwcEABL24Y=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=d5USjgZhLsCu/CcIgjmqin6bnpyeIQFXMMljimY56jQ7H7qj2YZRAIw/Lnv85+jJY
 2WoD4QHTW2j80L9WeDMgPLIlYYbh5DI/IIUcOA+AHS7G8yw/ybq0ppdQY19XEFXM2S
 LUk0LmwpVHVqHBqYR++VLy3rFH5sljYo37kFdnas=
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 dmarc=none (p=none dis=none)
 header.from=codeaurora.org
X-Mailman-Original-Authentication-Results: pdx-caf-mail.web.codeaurora.org;
 spf=none
 smtp.mailfrom=jcrouse@codeaurora.org
Subject: [Freedreno] [PATCH v3 06/16] iommu/arm-smmu: Add auxiliary domain
 support for arm-smmuv2
X-BeenThere: freedreno@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Freedreno graphics driver community testing & development
 <freedreno.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/freedreno>,
 <mailto:freedreno-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/freedreno>
List-Post: <mailto:freedreno@lists.freedesktop.org>
List-Help: <mailto:freedreno-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/freedreno>,
 <mailto:freedreno-request@lists.freedesktop.org?subject=subscribe>
Cc: jean-philippe.brucker@arm.com, linux-arm-msm@vger.kernel.org,
 Joerg Roedel <joro@8bytes.org>, Will Deacon <will.deacon@arm.com>,
 dianders@chromium.org, linux-kernel@vger.kernel.org,
 iommu@lists.linux-foundation.org, hoegsberg@google.com,
 Robin Murphy <robin.murphy@arm.com>, linux-arm-kernel@lists.infradead.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: freedreno-bounces@lists.freedesktop.org
Sender: "Freedreno" <freedreno-bounces@lists.freedesktop.org>

U3VwcG9ydCBhdXhpbGlhcnkgZG9tYWlucyBmb3IgYXJtLXNtbXUtdjIgdG8gaW5pdGlhbGl6ZSBh
bmQgc3VwcG9ydCBtdWx0aXBsZQpwYWdldGFibGVzIGZvciBhIHNpbmdsZSBTTU1VIGNvbnRleHQg
YmFuay4gU2luY2UgdGhlIHNtbXUtdjIgaGFyZHdhcmUKZG9lc24ndCBoYXZlIGFueSBidWlsdCBp
biBzdXBwb3J0IGZvciBzd2l0Y2hpbmcgdGhlIHBhZ2V0YWJsZSBiYXNlIGl0IGlzCmxlZnQgYXMg
YW4gZXhlcmNpc2UgdG8gdGhlIGNhbGxlciB0byBhY3R1YWxseSB1c2UgdGhlIHBhZ2V0YWJsZTsg
YXV4CmRvbWFpbnMgaW4gdGhlIElPTU1VIGRyaXZlciBhcmUgb25seSBwcmVvY2N1cGllZCB3aXRo
IGNyZWF0aW5nIGFuZCBtYW5hZ2luZwp0aGUgcGFnZXRhYmxlIG1lbW9yeS4KCkZvbGxvd2luZyBp
cyBhIHBzZXVkbyBjb2RlIGV4YW1wbGUgb2YgaG93IGEgZG9tYWluIGNhbiBiZSBjcmVhdGVkCgog
LyogQ2hlY2sgdG8gc2VlIGlmIGF1eCBkb21haW5zIGFyZSBzdXBwb3J0ZWQgKi8KIGlmIChpb21t
dV9kZXZfaGFzX2ZlYXR1cmUoZGV2LCBJT01NVV9ERVZfRkVBVF9BVVgpKSB7CgkgaW9tbXUgPSBp
b21tdV9kb21haW5fYWxsb2MoLi4uKTsKCgkgaWYgKGlvbW11X2F1eF9hdHRhY2hfZGV2aWNlKGRv
bWFpbiwgZGV2KSkKCQkgcmV0dXJuIEZBSUw7CgoJLyogU2F2ZSB0aGUgYmFzZSBhZGRyZXNzIG9m
IHRoZSBwYWdldGFibGUgZm9yIHVzZSBieSB0aGUgZHJpdmVyCglpb21tdV9kb21haW5fZ2V0X2F0
dHIoZG9tYWluLCBET01BSU5fQVRUUl9QVEJBU0UsICZwdGJhc2UpOwogfQoKVGhlbiAnZG9tYWlu
JyBjYW4gYmUgdXNlZCBsaWtlIGFueSBvdGhlciBpb21tdSBkb21haW4gdG8gbWFwIGFuZAp1bm1h
cCBpb3ZhIGFkZHJlc3NlcyBpbiB0aGUgcGFnZXRhYmxlLiBUaGUgZHJpdmVyL2hhcmR3YXJlIGlz
IHVzZWQKdG8gc3dpdGNoIHRoZSBwYWdldGFibGUgYWNjb3JkaW5nIHRvIGl0cyBvd24gc3BlY2lm
aWMgaW1wbGVtZW50YXRpb24uCgp2MzogVHJpdmlhbCB1cGRhdGUgdG8gcmVmbGVjdCBuZXcgcGd0
YWJsZSBvcHMgc2l0dWF0aW9uCgpTaWduZWQtb2ZmLWJ5OiBKb3JkYW4gQ3JvdXNlIDxqY3JvdXNl
QGNvZGVhdXJvcmEub3JnPgotLS0KCiBkcml2ZXJzL2lvbW11L2FybS1zbW11LmMgfCAxMjUgKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0KIDEgZmlsZSBjaGFu
Z2VkLCAxMTAgaW5zZXJ0aW9ucygrKSwgMTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9pb21tdS9hcm0tc21tdS5jIGIvZHJpdmVycy9pb21tdS9hcm0tc21tdS5jCmluZGV4IDMz
ZTY5MjguLjU4OWRhNDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW9tbXUvYXJtLXNtbXUuYworKysg
Yi9kcml2ZXJzL2lvbW11L2FybS1zbW11LmMKQEAgLTI2Miw2ICsyNjIsOCBAQCBzdHJ1Y3QgYXJt
X3NtbXVfZG9tYWluIHsKIAlzcGlubG9ja190CQkJY2JfbG9jazsgLyogU2VyaWFsaXNlcyBBVFMx
KiBvcHMgYW5kIFRMQiBzeW5jcyAqLwogCXUzMiBhdHRyaWJ1dGVzOwogCXN0cnVjdCBpb21tdV9k
b21haW4JCWRvbWFpbjsKKwlib29sCQkJCWlzX2F1eDsKKwl1NjQJCQkJdHRicjA7CiB9OwogCiBz
dHJ1Y3QgYXJtX3NtbXVfb3B0aW9uX3Byb3AgewpAQCAtODAzLDYgKzgwNSwxMiBAQCBzdGF0aWMg
aW50IGFybV9zbW11X2luaXRfZG9tYWluX2NvbnRleHQoc3RydWN0IGlvbW11X2RvbWFpbiAqZG9t
YWluLAogCWlmICghKHNtbXUtPmZlYXR1cmVzICYgQVJNX1NNTVVfRkVBVF9UUkFOU19TMikpCiAJ
CXNtbXVfZG9tYWluLT5zdGFnZSA9IEFSTV9TTU1VX0RPTUFJTl9TMTsKIAorCS8qIEF1eCBkb21h
aW5zIGNhbiBvbmx5IGJlIGNyZWF0ZWQgZm9yIHN0YWdlLTEgdGFibGVzICovCisJaWYgKHNtbXVf
ZG9tYWluLT5pc19hdXggJiYgc21tdV9kb21haW4tPnN0YWdlICE9IEFSTV9TTU1VX0RPTUFJTl9T
MSkgeworCQlyZXQgPSAtRUlOVkFMOworCQlnb3RvIG91dF91bmxvY2s7CisJfQorCiAJLyoKIAkg
KiBDaG9vc2luZyBhIHN1aXRhYmxlIGNvbnRleHQgZm9ybWF0IGlzIGV2ZW4gbW9yZSBmaWRkbHku
IFVudGlsIHdlCiAJICogZ3JvdyBzb21lIHdheSBmb3IgdGhlIGNhbGxlciB0byBleHByZXNzIGEg
cHJlZmVyZW5jZSwgYW5kL29yIG1vdmUKQEAgLTg1MCw2ICs4NTgsNyBAQCBzdGF0aWMgaW50IGFy
bV9zbW11X2luaXRfZG9tYWluX2NvbnRleHQoc3RydWN0IGlvbW11X2RvbWFpbiAqZG9tYWluLAog
CQkJaWFzID0gbWluKGlhcywgMzJVTCk7CiAJCQlvYXMgPSBtaW4ob2FzLCAzMlVMKTsKIAkJfQor
CiAJCXNtbXVfZG9tYWluLT50bGJfb3BzID0gJmFybV9zbW11X3MxX3RsYl9vcHM7CiAJCWJyZWFr
OwogCWNhc2UgQVJNX1NNTVVfRE9NQUlOX05FU1RFRDoKQEAgLTg2OSw2ICs4NzgsNyBAQCBzdGF0
aWMgaW50IGFybV9zbW11X2luaXRfZG9tYWluX2NvbnRleHQoc3RydWN0IGlvbW11X2RvbWFpbiAq
ZG9tYWluLAogCQkJaWFzID0gbWluKGlhcywgNDBVTCk7CiAJCQlvYXMgPSBtaW4ob2FzLCA0MFVM
KTsKIAkJfQorCiAJCWlmIChzbW11LT52ZXJzaW9uID09IEFSTV9TTU1VX1YyKQogCQkJc21tdV9k
b21haW4tPnRsYl9vcHMgPSAmYXJtX3NtbXVfczJfdGxiX29wc192MjsKIAkJZWxzZQpAQCAtODc4
LDIzICs4ODgsMzAgQEAgc3RhdGljIGludCBhcm1fc21tdV9pbml0X2RvbWFpbl9jb250ZXh0KHN0
cnVjdCBpb21tdV9kb21haW4gKmRvbWFpbiwKIAkJcmV0ID0gLUVJTlZBTDsKIAkJZ290byBvdXRf
dW5sb2NrOwogCX0KLQlyZXQgPSBfX2FybV9zbW11X2FsbG9jX2JpdG1hcChzbW11LT5jb250ZXh0
X21hcCwgc3RhcnQsCi0JCQkJICAgICAgc21tdS0+bnVtX2NvbnRleHRfYmFua3MpOwotCWlmIChy
ZXQgPCAwKQotCQlnb3RvIG91dF91bmxvY2s7CiAKLQljZmctPmNibmR4ID0gcmV0OwotCWlmIChz
bW11LT52ZXJzaW9uIDwgQVJNX1NNTVVfVjIpIHsKLQkJY2ZnLT5pcnB0bmR4ID0gYXRvbWljX2lu
Y19yZXR1cm4oJnNtbXUtPmlycHRuZHgpOwotCQljZmctPmlycHRuZHggJT0gc21tdS0+bnVtX2Nv
bnRleHRfaXJxczsKLQl9IGVsc2UgewotCQljZmctPmlycHRuZHggPSBjZmctPmNibmR4OwotCX0K
KwkvKgorCSAqIEF1eCBkb21haW5zIHdpbGwgdXNlIHRoZSBzYW1lIGNvbnRleHQgYmFuayBhc3Np
Z25lZCB0byB0aGUgbWFzdGVyCisJICogZG9tYWluIGZvciB0aGUgZGV2aWNlCisJICovCisJaWYg
KCFzbW11X2RvbWFpbi0+aXNfYXV4KSB7CisJCXJldCA9IF9fYXJtX3NtbXVfYWxsb2NfYml0bWFw
KHNtbXUtPmNvbnRleHRfbWFwLCBzdGFydCwKKwkJCQkJICAgICAgc21tdS0+bnVtX2NvbnRleHRf
YmFua3MpOworCQlpZiAocmV0IDwgMCkKKwkJCWdvdG8gb3V0X3VubG9jazsKIAotCWlmIChzbW11
X2RvbWFpbi0+c3RhZ2UgPT0gQVJNX1NNTVVfRE9NQUlOX1MyKQotCQljZmctPnZtaWQgPSBjZmct
PmNibmR4ICsgMSArIHNtbXUtPmNhdml1bV9pZF9iYXNlOwotCWVsc2UKLQkJY2ZnLT5hc2lkID0g
Y2ZnLT5jYm5keCArIHNtbXUtPmNhdml1bV9pZF9iYXNlOworCQljZmctPmNibmR4ID0gcmV0Owor
CQlpZiAoc21tdS0+dmVyc2lvbiA8IEFSTV9TTU1VX1YyKSB7CisJCQljZmctPmlycHRuZHggPSBh
dG9taWNfaW5jX3JldHVybigmc21tdS0+aXJwdG5keCk7CisJCQljZmctPmlycHRuZHggJT0gc21t
dS0+bnVtX2NvbnRleHRfaXJxczsKKwkJfSBlbHNlIHsKKwkJCWNmZy0+aXJwdG5keCA9IGNmZy0+
Y2JuZHg7CisJCX0KKworCQlpZiAoc21tdV9kb21haW4tPnN0YWdlID09IEFSTV9TTU1VX0RPTUFJ
Tl9TMikKKwkJCWNmZy0+dm1pZCA9IGNmZy0+Y2JuZHggKyAxICsgc21tdS0+Y2F2aXVtX2lkX2Jh
c2U7CisJCWVsc2UKKwkJCWNmZy0+YXNpZCA9IGNmZy0+Y2JuZHggKyBzbW11LT5jYXZpdW1faWRf
YmFzZTsKKwl9CiAKIAlwZ3RibF9jZmcgPSAoc3RydWN0IGlvX3BndGFibGVfY2ZnKSB7CiAJCS5w
Z3NpemVfYml0bWFwCT0gc21tdS0+cGdzaXplX2JpdG1hcCwKQEAgLTkxNywxMSArOTM0LDIxIEBA
IHN0YXRpYyBpbnQgYXJtX3NtbXVfaW5pdF9kb21haW5fY29udGV4dChzdHJ1Y3QgaW9tbXVfZG9t
YWluICpkb21haW4sCiAJCWdvdG8gb3V0X2NsZWFyX3NtbXU7CiAJfQogCisJLyogQ2FjaGUgdGhl
IFRUQlIwIGZvciB0aGUgYXV4IGRvbWFpbiAqLworCXNtbXVfZG9tYWluLT50dGJyMCA9IHBndGJs
X2NmZy5hcm1fbHBhZV9zMV9jZmcudHRiclswXTsKKwogCS8qIFVwZGF0ZSB0aGUgZG9tYWluJ3Mg
cGFnZSBzaXplcyB0byByZWZsZWN0IHRoZSBwYWdlIHRhYmxlIGZvcm1hdCAqLwogCWRvbWFpbi0+
cGdzaXplX2JpdG1hcCA9IHBndGJsX2NmZy5wZ3NpemVfYml0bWFwOwogCWRvbWFpbi0+Z2VvbWV0
cnkuYXBlcnR1cmVfZW5kID0gKDFVTCA8PCBpYXMpIC0gMTsKIAlkb21haW4tPmdlb21ldHJ5LmZv
cmNlX2FwZXJ0dXJlID0gdHJ1ZTsKIAorCS8qCisJICogYXV4IGRvbWFpbnMgZG9uJ3QgdXNlIHNw
bGl0IHRhYmxlcyBvciBwcm9ncmFtIHRoZSBoYXJkd2FyZSBzbyB3ZSdyZQorCSAqIGRvbmUgc2V0
dGluZyBpdCB1cAorCSAqLworCWlmIChzbW11X2RvbWFpbi0+aXNfYXV4KQorCQlnb3RvIG91dDsK
KwogCS8qIEluaXRpYWxpc2UgdGhlIGNvbnRleHQgYmFuayB3aXRoIG91ciBwYWdlIHRhYmxlIGNm
ZyAqLwogCWFybV9zbW11X2luaXRfY29udGV4dF9iYW5rKHNtbXVfZG9tYWluLCAmcGd0YmxfY2Zn
KTsKIAlhcm1fc21tdV93cml0ZV9jb250ZXh0X2Jhbmsoc21tdSwgY2ZnLT5jYm5keCk7CkBAIC05
MzksNiArOTY2LDcgQEAgc3RhdGljIGludCBhcm1fc21tdV9pbml0X2RvbWFpbl9jb250ZXh0KHN0
cnVjdCBpb21tdV9kb21haW4gKmRvbWFpbiwKIAkJY2ZnLT5pcnB0bmR4ID0gSU5WQUxJRF9JUlBU
TkRYOwogCX0KIAorb3V0OgogCW11dGV4X3VubG9jaygmc21tdV9kb21haW4tPmluaXRfbXV0ZXgp
OwogCiAJLyogUHVibGlzaCBwYWdlIHRhYmxlIG9wcyBmb3IgbWFwL3VubWFwICovCkBAIC05NjIs
NiArOTkwLDEyIEBAIHN0YXRpYyB2b2lkIGFybV9zbW11X2Rlc3Ryb3lfZG9tYWluX2NvbnRleHQo
c3RydWN0IGlvbW11X2RvbWFpbiAqZG9tYWluKQogCWlmICghc21tdSB8fCBkb21haW4tPnR5cGUg
PT0gSU9NTVVfRE9NQUlOX0lERU5USVRZKQogCQlyZXR1cm47CiAKKwkvKiBBbGwgd2UgbmVlZCB0
byBkbyBmb3IgYXV4IGRldmljZXMgaXMgZGVzdHJveSB0aGUgcGFnZXRhYmxlICovCisJaWYgKHNt
bXVfZG9tYWluLT5pc19hdXgpIHsKKwkJZnJlZV9pb19wZ3RhYmxlX29wcyhzbW11X2RvbWFpbi0+
cGd0Ymxfb3BzKTsKKwkJcmV0dXJuOworCX0KKwogCXJldCA9IGFybV9zbW11X3JwbV9nZXQoc21t
dSk7CiAJaWYgKHJldCA8IDApCiAJCXJldHVybjsKQEAgLTEyNDIsMTQgKzEyNzYsMTcgQEAgc3Rh
dGljIGludCBhcm1fc21tdV9kb21haW5fYWRkX21hc3RlcihzdHJ1Y3QgYXJtX3NtbXVfZG9tYWlu
ICpzbW11X2RvbWFpbiwKIAogc3RydWN0IGFybV9zbW11X2NsaWVudF9tYXRjaF9kYXRhIHsKIAli
b29sIGRpcmVjdF9tYXBwaW5nOworCWJvb2wgYWxsb3dfYXV4X2RvbWFpbjsKIH07CiAKIHN0YXRp
YyBjb25zdCBzdHJ1Y3QgYXJtX3NtbXVfY2xpZW50X21hdGNoX2RhdGEgcWNvbV9hZHJlbm8gPSB7
CiAJLmRpcmVjdF9tYXBwaW5nID0gdHJ1ZSwKKwkuYWxsb3dfYXV4X2RvbWFpbiA9IHRydWUsCiB9
OwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGFybV9zbW11X2NsaWVudF9tYXRjaF9kYXRhIHFjb21f
bWRzcyA9IHsKIAkuZGlyZWN0X21hcHBpbmcgPSB0cnVlLAorCS5hbGxvd19hdXhfZG9tYWluID0g
ZmFsc2UsCiB9OwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCBhcm1fc21tdV9j
bGllbnRfb2ZfbWF0Y2hbXSA9IHsKQEAgLTEyNjksNiArMTMwNiw1NSBAQCBhcm1fc21tdV9jbGll
bnRfZGF0YShzdHJ1Y3QgZGV2aWNlICpkZXYpCiAJcmV0dXJuIG1hdGNoID8gbWF0Y2gtPmRhdGEg
OiBOVUxMOwogfQogCitzdGF0aWMgYm9vbCBhcm1fc21tdV9zdXBwb3J0c19hdXgoc3RydWN0IGRl
dmljZSAqZGV2KQoreworCWNvbnN0IHN0cnVjdCBhcm1fc21tdV9jbGllbnRfbWF0Y2hfZGF0YSAq
ZGF0YSA9CisJCWFybV9zbW11X2NsaWVudF9kYXRhKGRldik7CisKKwlyZXR1cm4gKGRhdGEgJiYg
ZGF0YS0+YWxsb3dfYXV4X2RvbWFpbik7Cit9CisKK3N0YXRpYyBib29sIGFybV9zbW11X2Rldl9o
YXNfZmVhdChzdHJ1Y3QgZGV2aWNlICpkZXYsCisJCWVudW0gaW9tbXVfZGV2X2ZlYXR1cmVzIGZl
YXQpCit7CisJaWYgKGZlYXQgIT0gSU9NTVVfREVWX0ZFQVRfQVVYKQorCQlyZXR1cm4gZmFsc2U7
CisKKwlyZXR1cm4gYXJtX3NtbXVfc3VwcG9ydHNfYXV4KGRldik7Cit9CisKK3N0YXRpYyBpbnQg
YXJtX3NtbXVfZGV2X2VuYWJsZV9mZWF0KHN0cnVjdCBkZXZpY2UgKmRldiwKKwkJZW51bSBpb21t
dV9kZXZfZmVhdHVyZXMgZmVhdCkKK3sKKwkvKiBJZiBzdXBwb3J0ZWQgYXV4IGRvbWFpbiBzdXBw
b3J0IGlzIGFsd2F5cyAib24iICovCisJaWYgKGZlYXQgPT0gSU9NTVVfREVWX0ZFQVRfQVVYICYm
IGFybV9zbW11X3N1cHBvcnRzX2F1eChkZXYpKQorCQlyZXR1cm4gMDsKKworCXJldHVybiAtRU5P
REVWOworfQorCitzdGF0aWMgaW50IGFybV9zbW11X2Rldl9kaXNhYmxlX2ZlYXQoc3RydWN0IGRl
dmljZSAqZGV2LAorCQllbnVtIGlvbW11X2Rldl9mZWF0dXJlcyBmZWF0KQoreworCXJldHVybiAt
RUJVU1k7Cit9CisKKy8qIFNldCB1cCBhIG5ldyBhdXggZG9tYWluIGFuZCBjcmVhdGUgYSBuZXcg
cGFnZXRhYmxlIHdpdGggdGhlIHNhbWUKKyAqIGNoYXJhY3RlcmlzdGljcyBhcyB0aGUgbWFzdGVy
CisgKi8KK3N0YXRpYyBpbnQgYXJtX3NtbXVfYXV4X2F0dGFjaF9kZXYoc3RydWN0IGlvbW11X2Rv
bWFpbiAqZG9tYWluLAorCQlzdHJ1Y3QgZGV2aWNlICpkZXYpCit7CisJc3RydWN0IGlvbW11X2Z3
c3BlYyAqZndzcGVjID0gZGV2X2lvbW11X2Z3c3BlY19nZXQoZGV2KTsKKwlzdHJ1Y3QgYXJtX3Nt
bXVfZGV2aWNlICpzbW11ID0gZndzcGVjX3NtbXUoZndzcGVjKTsKKwlzdHJ1Y3QgYXJtX3NtbXVf
ZG9tYWluICpzbW11X2RvbWFpbiA9IHRvX3NtbXVfZG9tYWluKGRvbWFpbik7CisKKwlzbW11X2Rv
bWFpbi0+aXNfYXV4ID0gdHJ1ZTsKKworCS8qIE5vIHBvd2VyIGlzIG5lZWRlZCBiZWNhdXNlIGF1
eCBkb21haW4gZG9lc24ndCB0b3VjaCB0aGUgaGFyZHdhcmUgKi8KKwlyZXR1cm4gYXJtX3NtbXVf
aW5pdF9kb21haW5fY29udGV4dChkb21haW4sIHNtbXUpOworfQorCiBzdGF0aWMgaW50IGFybV9z
bW11X2F0dGFjaF9kZXYoc3RydWN0IGlvbW11X2RvbWFpbiAqZG9tYWluLCBzdHJ1Y3QgZGV2aWNl
ICpkZXYpCiB7CiAJaW50IHJldDsKQEAgLTE2MzEsNiArMTcxNywxMSBAQCBzdGF0aWMgaW50IGFy
bV9zbW11X2RvbWFpbl9nZXRfYXR0cihzdHJ1Y3QgaW9tbXVfZG9tYWluICpkb21haW4sCiAJCQkq
KGludCAqKWRhdGEgPSAhIShzbW11X2RvbWFpbi0+YXR0cmlidXRlcyAmCiAJCQkJKDEgPDwgRE9N
QUlOX0FUVFJfU1BMSVRfVEFCTEVTKSk7CiAJCQlyZXR1cm4gMDsKKwkJY2FzZSBET01BSU5fQVRU
Ul9QVEJBU0U6CisJCQlpZiAoIXNtbXVfZG9tYWluLT5pc19hdXgpCisJCQkJcmV0dXJuIC1FTk9E
RVY7CisJCQkqKCh1NjQgKilkYXRhKSA9IHNtbXVfZG9tYWluLT50dGJyMDsKKwkJCXJldHVybiAw
OwogCQlkZWZhdWx0OgogCQkJcmV0dXJuIC1FTk9ERVY7CiAJCX0KQEAgLTE3NDEsNyArMTgzMiwx
MSBAQCBzdGF0aWMgc3RydWN0IGlvbW11X29wcyBhcm1fc21tdV9vcHMgPSB7CiAJLmNhcGFibGUJ
CT0gYXJtX3NtbXVfY2FwYWJsZSwKIAkuZG9tYWluX2FsbG9jCQk9IGFybV9zbW11X2RvbWFpbl9h
bGxvYywKIAkuZG9tYWluX2ZyZWUJCT0gYXJtX3NtbXVfZG9tYWluX2ZyZWUsCisJLmRldl9oYXNf
ZmVhdAkJPSBhcm1fc21tdV9kZXZfaGFzX2ZlYXQsCisJLmRldl9lbmFibGVfZmVhdAk9IGFybV9z
bW11X2Rldl9lbmFibGVfZmVhdCwKKwkuZGV2X2Rpc2FibGVfZmVhdAk9IGFybV9zbW11X2Rldl9k
aXNhYmxlX2ZlYXQsCiAJLmF0dGFjaF9kZXYJCT0gYXJtX3NtbXVfYXR0YWNoX2RldiwKKwkuYXV4
X2F0dGFjaF9kZXYJCT0gYXJtX3NtbXVfYXV4X2F0dGFjaF9kZXYsCiAJLm1hcAkJCT0gYXJtX3Nt
bXVfbWFwLAogCS51bm1hcAkJCT0gYXJtX3NtbXVfdW5tYXAsCiAJLmZsdXNoX2lvdGxiX2FsbAk9
IGFybV9zbW11X2ZsdXNoX2lvdGxiX2FsbCwKLS0gCjIuNy40CgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpGcmVlZHJlbm8gbWFpbGluZyBsaXN0CkZyZWVk
cmVub0BsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9mcmVlZHJlbm8=
